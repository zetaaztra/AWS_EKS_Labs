### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###
name: "02-ELKStack"
on:
  workflow_dispatch:
jobs:
  deploy-elkstack:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1  # Specify your preferred AWS region

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Install kubectl
        run: |
          sudo apt-get install -y kubectl

      - name: Configure kubectl for AWS EKS
        run: |
          aws eks update-kubeconfig --name module-eks-7V1EN

      - name: Wait for Resources
        run: sleep 30

      - name: Deploy ELK Stack
        run: | 
          cd modules/elk
          kubectl config view
          kubectl apply -f . --validate=false
    
      - name: Verify kubectl configuration
        run: | 
          sleep 30
          kubectl get svc -n elk
